{"version":3,"sources":["TF-White.svg","logo.svg","context.js","components/login/index.js","helpers/translate.js","components/chart_listing/selection_panel.js","components/chart_listing/project_issue_graph.js","components/multi_choice_graph/index.js","components/pagination/index.js","components/gallery/response_photos.js","components/gallery/issue_photos.js","components/chart_listing/index.js","components/chart_listing/issue_modal.js","components/dashboard/top_nav_bar.js","components/dashboard/index.js","components/login/protected_route.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","Login","props","useHistory","useState","token","setToken","useContext","setUserInterfaceText","userInterfaceText","handleSubmit","a","axios","get","headers","Authorization","then","data","catch","err","console","log","res","status","user_interface_text","setLogin","localStorage","setItem","history","push","className","id","placeholder","type","onChange","event","btoa","target","value","onClick","translate","key","find","x","SelectionPanel","programmes","projects","selectProgrammeHandler","selectProjectHandler","setSelectedValues","selectedValues","handleGenerateReport","Form","Group","Row","Col","Label","Control","as","map","programme","name","onSelect","project","FormControl","date","startDate","style","width","endDate","Button","variant","ProjectIssueGraph","options","handleShow","renderIf","md","project_issues","padding","actual_issues","size","MultiChoiceGraph","select_id","setSelectedId","handleClose","scales","yAxes","xAxes","barThickness","maxBarThickness","ticks","min","precision","barPercentage","require","project_activity","project_activity_name","height","project_activity_graphs","graph","question_id","question_text","question_reponses_graph","free_text_question","issue_notes","length","issue_notes_count","Modal","dialogClassName","show","onHide","centered","Header","closeButton","Title","Body","Table","striped","bordered","hover","responsive","colspan","issue","issue_id","resolved","user_id","note","responses","response","ImagePagination","requestNextImages","photosCount","whichPage","active","setActive","items","ceil","Math","number","offset","Item","pageItems","ResponsePhotos","photos","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","photo","index","onClose","currentIndex","views","srcset","caption","text","IssuePhotos","host","issuePhotos","issuePhotosCount","currentIssuesImage","setCurrentIssuesImage","viewerIssuesIsOpen","setIssuesViewerIsOpen","openIssuesLightbox","IssueModal","project_question_text","ChartListing","spinner","rerender","showResponsePhotos","setShowResponsePhotos","showIssuePhotos","setShowIssuePhotos","loadingImages","setLoadingImages","setPhotos","setPhotosCount","setIssuePhotos","setIssuePhotosCount","setProgrammes","setProjects","project_id","programme_id","Date","requestIntialImages","limit","request","document","getElementById","getItem","params","photos_count","issue_photos_count","issue_photos","useEffect","sort","b","localeCompare","toISOString","slice","activity","programme_name","project_name","span","Spinner","animation","beginAtZero","activity_order","Container","fluid","scrollableAncestor","window","topOffset","onEnter","TopNavBar","handleLogout","setLocale","e","marginTop","marginBottom","aria-label","selected","href","role","data-toggle","aria-haspopup","aria-expanded","Dashboard","setData","setSpinner","setRender","src","logo","alt","paddingLeft","removeItem","locale","Object","keys","ProtectedRoute","Component","component","login","rest","render","to","pathname","App","Provider","path","exact","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.88275ed8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TF-White.c926635b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { createContext } from 'react';\nexport const AppContext = createContext();","import React, { createContext, useState, useEffect, useCallback, useContext } from \"react\";\nimport { AppContext } from '../../context';\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nlet host;\nlet logged_in = false;\nhost = \"https://field-backend.truefootprint.com\";\n//host = \"https://staging-field-backend.truefootprint.com\";\n//host = \"http://localhost:3000\";\n\nfunction Login(props) {\n  let history = useHistory();\n  const [token, setToken] = useState(\"\");\n  const { userInterfaceText, setUserInterfaceText  } = useContext(AppContext);\n\n  function handleChange(event) {\n    setToken(btoa(`user:${event.target.value}`));\n  }\n\n  const handleSubmit = async () => {\n    let res = await axios\n      .get(`${host}/reports/setup_report_form`, {\n        headers: {\n          Authorization: `Basic ${token}`,\n        },\n      })\n      .then((data) => {\n        return data;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    if (res.status === 200) {\n      setUserInterfaceText(res.data.user_interface_text);\n      console.log(\"BEFORE REDIRECT\");\n      props.setLogin(true);\n      localStorage.setItem(\"token\", token);            \n    }\n    props.history.push(\"/dashboard\");\n  };\n\n  return (\n    <div className=\"container\">\n      {/* Outer Row */}\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\n          <div className=\"card o-hidden border-0 shadow-lg my-5\">\n            <div className=\"card-body p-0\">\n              {/* Nested Row within Card Body */}\n              <div className=\"row\">\n                <div className=\"col-lg-6 d-none d-lg-block bg-login-image\" />\n                <div className=\"col-lg-6\">\n                  <div className=\"p-5\">\n                    <div className=\"text-center\">\n                      <h1 className=\"h4 text-gray-900 mb-4\">Welcome Back!</h1>\n                    </div>\n                    <div className=\"user\">\n                      <div className=\"form-group\">\n                        <input\n                          className=\"form-control form-control-user\"\n                          id=\"exampleInputEmail\"\n                          placeholder=\"Enter Email Address...\"\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"password\"\n                          onChange={handleChange}\n                          className=\"form-control form-control-user\"\n                          placeholder=\"Password\"\n                        />\n                      </div>\n                      <div className=\"form-group\"></div>\n                      <button\n                        onClick={handleSubmit}\n                        className=\"btn btn-primary btn-user btn-block\"\n                      >\n                        Login\n                      </button>\n                      <hr />\n                    </div>\n                    <hr />\n                    {/* <div className=\"text-center\">\n                      <a className=\"small\" href=\"forgot-password.html\">Forgot Password?</a>\n                    </div>\n                    <div className=\"text-center\">\n                      <a className=\"small\" href=\"register.html\">Create an Account!</a>\n                    </div> */}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","function translate(key, userInterfaceText) {\n  //JSON.parse(localStorage.getItem(\"user_interface_text\")).find(x => x.key === key).value\n  return userInterfaceText.find(x => x.key === key).value\n}\n\nexport default translate;\n","import React, { createContext, useState, useEffect, useCallback, useContext } from \"react\";\nimport { AppContext } from '../../context';\nimport translate from \"../../helpers/translate\";\nimport {\n  Col,\n  Row,\n  Spinner,\n  Container,\n  Form,\n  FormControl,\n  Modal,\n  Button,\n  Table,\n} from \"react-bootstrap\";\n\n\nfunction SelectionPanel({\n  programmes,\n  projects,\n  selectProgrammeHandler,\n  selectProjectHandler,\n  setSelectedValues,\n  selectedValues,\n  handleGenerateReport,\n}) {\n  const { userInterfaceText, setUserInterfaceText } = useContext(AppContext);\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">{translate(\"report_select_panel_label\", userInterfaceText)}</h6>\n      </div>\n      <div className=\"card-body\">\n        <Form>\n          <Form.Group>\n            <Row>\n              <Col>\n                <Form.Label>{translate(\"report_programmes_label\", userInterfaceText)}</Form.Label>\n                <Form.Control\n                  id=\"programme-select\"\n                  as=\"select\"\n                  onChange={selectProgrammeHandler}\n                >\n                  {programmes &&\n                    programmes.map((programme) => (\n                      <option key={programme.id} value={programme.id}>\n                        {programme.name}\n                      </option>\n                    ))}\n                </Form.Control>\n              </Col>\n              <Col>\n                <Form.Label>{translate(\"report_projects_label\", userInterfaceText)}</Form.Label>\n                <Form.Control\n                  id=\"project-select\"\n                  as=\"select\"\n                  onChange={selectProjectHandler}\n                >\n                  <option value=\"\" onSelect={selectProjectHandler}>\n                    {\" \"}\n                    {translate(\"report_all_projects_label\", userInterfaceText)}\n                  </option>\n                  {projects &&\n                    projects.map((project) => (\n                      <option key={project.id} value={project.id}>\n                        {project.name}\n                      </option>\n                    ))}\n                </Form.Control>\n              </Col>\n              <Col>\n                <Form.Label>{translate(\"report_start_date_label\", userInterfaceText)}</Form.Label>\n                <FormControl\n                  id=\"start-date-select\"\n                  onChange={(date) => {\n                    setSelectedValues({\n                      ...selectedValues,\n                      startDate: date.target.value,\n                    });\n                  }}\n                  type=\"date\"\n                  style={{ width: \"100%\" }}\n                />\n              </Col>\n              <Col>\n                <Form.Label>{translate(\"report_end_date_label\", userInterfaceText)}</Form.Label>\n                <FormControl\n                  id=\"end-date-select\"\n                  onChange={(date) =>\n                    setSelectedValues({\n                      ...selectedValues,\n                      endDate: date.target.value,\n                    })\n                  }\n                  type=\"date\"\n                  style={{ width: \"100%\" }}\n                />\n              </Col>\n              <Col>\n                <Button\n                  variant=\"primary\"\n                  onClick={handleGenerateReport}\n                  style={{ \"margin-top\": \"30px\" }}\n                >\n                  {translate(\"report_generate_report_label\", userInterfaceText)}\n                </Button>\n              </Col>\n            </Row>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default SelectionPanel;\n","import React, { useContext } from \"react\";\nimport { Col, Row, Spinner, Container, Form, FormControl, Modal, Button, Table } from \"react-bootstrap\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport translate from \"../../helpers/translate\";\nimport { AppContext } from \"../../context\";\n\nfunction ProjectIssueGraph({data, options, handleShow, renderIf}){\n    const { userInterfaceText, setUserInterfaceText } = useContext(AppContext);\n    if(renderIf) {\n    return (\n        <Col md={4}>\n          <div className=\"card shadow mb-4\">\n            <div className=\"card-header py-3\">\n              <h6 className=\"m-0 font-weight-bold text-primary\">\n              {translate(\"report_issues_reported_label\", userInterfaceText)}\n              </h6>\n            </div>\n            <div className=\"card-body\">\n              <HorizontalBar data={data.project_issues} options={options} />\n            </div>\n            <div className=\"card-footer\" style={{ padding: \"5px\" }}>\n              <Row>\n                <Col md={3}>\n                  {data.project_issues.actual_issues && (\n                    <Button\n                      size=\"sm\"\n                      variant=\"primary\"\n                      onClick={() => handleShow(\"1\")}\n                    >\n                      {translate(\"report_view_issues_label\", userInterfaceText)}\n                    </Button>\n                  )}\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </Col>\n      );\n    } else {\n        return null;\n    }\n}\n\nexport default ProjectIssueGraph;","import React, { useState, useContext } from \"react\";\nimport translate from \"../../helpers/translate\";\nimport { AppContext } from \"../../context\";\nimport axios from \"axios\";\nimport { Waypoint } from \"react-waypoint\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport DatePicker from \"react-datepicker\";\nimport {\n  Col,\n  Row,\n  Spinner,\n  Container,\n  Form,\n  FormControl,\n  Modal,\n  Button,\n  Table,\n} from \"react-bootstrap\";\n\nfunction MultiChoiceGraph(props) {\n  const { userInterfaceText, setUserInterfaceText } = useContext(AppContext);\n  console.log(\"MODAL\");\n  console.log(userInterfaceText);\n  const [select_id, setSelectedId] = useState(0);\n\n  const handleClose = () => setSelectedId(0);\n  const handleShow = (id) => setSelectedId(id);\n\n  const showResponses = () => {\n    //setCurrentImage(0);\n    //setViewerIsOpen(false);\n  };\n\n  const options = {\n    scales: {\n      yAxes: [{}],\n      xAxes: [\n        {\n          barThickness: 10,\n          maxBarThickness: 18,\n          ticks: { min: 0, precision: 0 },\n          barPercentage: 0.5,\n        },\n      ],\n    },\n  };\n  var randomColor = require(\"randomcolor\"); // import the script\n  let color = \"#1e9ed9\"; //randomColor({hue: 'blue'});\n  return (\n    <>\n      <Row>\n        <Col>\n          <h3> {translate(\"report_activity_label\", userInterfaceText)}: {props.project_activity.project_activity_name} </h3>\n          <br />\n          <Row  style={{ height: \"100%\" }}>\n            {props.project_activity.project_activity_graphs.map((graph) => (\n              <Col md={4} key={graph.question_id}>\n                {/* Bar Chart */}\n                <div className=\"card shadow mb-4\">\n                  <div className=\"card-header py-3\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                      {graph.question_text}\n                    </h6>\n                  </div>\n                  <div className=\"card-body\" style={{ padding: \"5px\" }}>\n                    <HorizontalBar\n                      options={options}\n                      data={graph.question_reponses_graph}\n                    />\n                  </div>\n                  <div className=\"card-footer\" style={{ padding: \"5px\" }}>\n                    <Row>\n                      <Col md={3}>\n                        <Button\n                          size=\"sm\"\n                          variant=\"info\"\n                          onClick={() =>\n                            handleShow(\"graph-\" + graph.question_id)\n                          }\n                        >\n                          {translate(\"report_enlarge_graph_label\", userInterfaceText)}\n                        </Button>\n                      </Col>\n                      {graph.free_text_question && (\n                        <Col md={3}>\n                          <Button\n                            size=\"sm\"\n                            variant=\"primary\"\n                            onClick={() => handleShow(graph.question_id)}\n                          >\n                            {translate(\"report_view_responses_label\", userInterfaceText)}\n                          </Button>\n                        </Col>\n                      )}\n                      {graph.issue_notes && graph.issue_notes.length != 0 && (\n                        <Col md={3}>\n                          <Button\n                            size=\"sm\"\n                            variant=\"primary\"\n                            onClick={() =>\n                              handleShow(\"issues-\" + graph.question_id)\n                            }\n                          >\n                            {translate(\"report_view_issues_label\", userInterfaceText)} ({graph.issue_notes_count})\n                          </Button>\n                        </Col>\n                      )}\n                    </Row>\n                  </div>\n                </div>\n                <br />\n                <br />\n                {graph.issue_notes && graph.issue_notes.length != 0 && (\n                  <Modal\n                    dialogClassName=\"modal-90w\"\n                    show={\"issues-\" + graph.question_id === select_id}\n                    onHide={handleClose}\n                    centered\n                  >\n                    <Modal.Header closeButton>\n                      <Modal.Title>\n                        {\" \"}\n                        {graph.issue_notes_count} {translate(\"report_issue_modal_issues_for_label\", userInterfaceText)} \"\n                        {graph.question_text}\"\n                      </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      <Table striped bordered hover responsive variant=\"dark\">\n                        <thead>\n                          <tr>\n                            <th colspan=\"1\">{translate(\"report_issue_modal_issue_id_label\", userInterfaceText)}</th>\n                            <th colspan=\"5\">{translate(\"report_issue_modal_resolved_label\", userInterfaceText)}</th>\n                            <th colspan=\"3\">{translate(\"report_response_modal_user_id_label\", userInterfaceText)}</th>\n                            <th colspan=\"3\">{translate(\"report_issue_modal_note_label\", userInterfaceText)}</th>\n                            <th colspan=\"3\">{translate(\"report_response_modal_date_label\", userInterfaceText)}</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {graph.issue_notes.map((issue) => (\n                            <tr>\n                              <td colspan=\"1\">{issue.issue_id}</td>\n                              <td colspan=\"5\">\n                                {issue.resolved ? translate(\"report_issue_modal_resolved_label\", userInterfaceText) : translate(\"report_issue_modal_not_resolved_label\", userInterfaceText)}\n                              </td>\n                              <td colspan=\"3\">{issue.user_id}</td>\n                              <td colspan=\"3\">{issue.note}</td>\n                              <td colspan=\"3\">{issue.date}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </Modal.Body>\n                  </Modal>\n                )}\n\n                <Modal\n                  dialogClassName=\"modal-90w\"\n                  show={\"graph-\" + graph.question_id === select_id}\n                  onHide={handleClose}\n                  centered\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>{graph.question_text}</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    <HorizontalBar\n                      options={options}\n                      data={graph.question_reponses_graph}\n                    />\n                  </Modal.Body>\n                </Modal>\n                {graph.free_text_question && (\n                  <Modal\n                    dialogClassName=\"modal-90w\"\n                    show={graph.question_id === select_id}\n                    onHide={handleClose}\n                    centered\n                  >\n                    <Modal.Header closeButton>\n                      <Modal.Title>{graph.question_text}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      <Table striped bordered hover responsive variant=\"dark\">\n                        <thead>\n                          <tr>\n                            <th colspan=\"1\">{translate(\"report_response_modal_user_id_label\", userInterfaceText)}</th>\n                            <th colspan=\"5\">{translate(\"report_response_modal_response_label\", userInterfaceText)}</th>\n                            <th colspan=\"3\">{translate(\"report_response_modal_date_label\", userInterfaceText)}</th>\n                            <th colspan=\"3\">{translate(\"report_response_modal_project_label\", userInterfaceText)}</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {graph.responses.map((response) => (\n                            <tr>\n                              <td colspan=\"1\">{response.user_id}</td>\n                              <td colspan=\"5\">{response.response}</td>\n                              <td colspan=\"3\">{response.date}</td>\n                              <td colspan=\"3\">{response.project}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </Modal.Body>\n                  </Modal>\n                )}\n              </Col>\n            ))}\n            {/* {props.lastOne && (\n              <Waypoint\n                debug={true}\n                scrollableAncestor={window}\n                topOffset={\"95%\"}\n                onEnter={function (props) {\n                  alert(\"Yes\");\n                  //alert(props.currentPosition);\n                  //setTimeout(setTest(true), 5000);\n\n                  // here you can use `props.currentPosition`, `props.previousPosition`, and\n                  // `props.event`\n                }}\n              >\n                <div>last</div>\n              </Waypoint>\n            )} */}\n          </Row>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default MultiChoiceGraph;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport MultiChoiceGraph from \"../multi_choice_graph\";\nimport axios from \"axios\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport Gallery from \"react-photo-gallery\";\nimport * as Rbs from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\n\nfunction me() {\n  alert(\"me\");\n}\n\nexport default function ImagePagination({\n  requestNextImages,\n  photosCount,\n  whichPage = \"responses\",\n}) {\n  const [active, setActive] = useState(1);\n\n  function pageItems(requestNextImages, photosCount, whichPage) {\n    let items = [];\n    console.log(\"photo count\");\n    console.log(photosCount);\n    let ceil = Math.ceil(photosCount / 10);\n    for (let number = 1; number <= ceil; number++) {\n      console.log(\"INSIDE PAGE ITEMS\");\n      let offset = (number - 1) * 10;\n      items.push(\n        <Rbs.Pagination.Item\n          key={number}\n          active={number === active}\n          onClick={() => {\n            requestNextImages(offset, 10, whichPage);\n            setActive(number);\n          }}\n        >\n          {number}\n        </Rbs.Pagination.Item>\n      );\n    }\n    return items;\n  }\n  if (photosCount < 10) {\n    return null;\n  } else {\n    return (\n      <div>\n        <Rbs.Pagination>\n          {pageItems(requestNextImages, photosCount, whichPage)}\n        </Rbs.Pagination>\n      </div>\n    );\n  }\n}\n","import ImagePagination from \"../pagination\";\nimport React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { Col, Row, Spinner, Container, Form, FormControl, Modal, Button, Table } from \"react-bootstrap\";\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal as ModalCarousel, ModalGateway } from \"react-images\";\nimport translate from \"../../helpers/translate\";\nimport { AppContext } from \"../../context\";\n\nfunction ResponsePhotos({responses, photos, photosCount, requestNextImages}) {  \n    \n    const [currentImage, setCurrentImage] = useState(0);\n    const [viewerIsOpen, setViewerIsOpen] = useState(false);\n    const { userInterfaceText, setUserInterfaceText } = useContext(AppContext);\n\n    const openLightbox = useCallback((event, { photo, index }) => {\n      setCurrentImage(index);\n      setViewerIsOpen(true);\n    }, []);\n  \n    const closeLightbox = () => {\n      setCurrentImage(0);\n      setViewerIsOpen(false);\n    };\n\n    return (\n        <Col>\n          <div className=\"card shadow mb-4\">\n            <div className=\"card-header py-3\">\n              <h6 className=\"m-0 font-weight-bold text-primary\">\n              {translate(\"report_gallery_reponses_label\", userInterfaceText)}\n              </h6>\n            </div>\n            <div className=\"card-body\">\n              <Gallery photos={photos} onClick={openLightbox}/>\n              <hr/>\n              <ImagePagination\n                requestNextImages={requestNextImages}\n                photosCount={photosCount}\n              />\n              <ModalGateway>\n                {viewerIsOpen ? (\n                  <ModalCarousel onClose={closeLightbox}>\n                    <Carousel\n                      currentIndex={currentImage}\n                      views={photos.map((x) => ({\n                        ...x,\n                        srcset: \"hello\", //x.srcSet,\n                        caption: x.text, //x.title,\n                      }))}\n                    />\n                  </ModalCarousel>\n                ) : null}\n              </ModalGateway>\n            </div>\n          </div>\n        </Col>\n      )\n}\n\nexport default ResponsePhotos;\n","import ImagePagination from \"../pagination\";\nimport React, { useState, useContext, useCallback } from \"react\";\nimport { Col, Row, Spinner, Container, Form, FormControl, Modal, Button, Table } from \"react-bootstrap\";\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal as ModalCarousel, ModalGateway } from \"react-images\";\nimport translate from \"../../helpers/translate\";\nimport { AppContext } from \"../../context\";\n\nfunction IssuePhotos({issuePhotos, data, issuePhotosCount, requestNextImages}) {\n    const [currentIssuesImage, setCurrentIssuesImage] = useState(0);\n    const [viewerIssuesIsOpen, setIssuesViewerIsOpen] = useState(false);\n    const { userInterfaceText, setUserInterfaceText } = useContext(AppContext);\n  \n    const openIssuesLightbox = useCallback((event, { photo, index }) => {\n      setCurrentIssuesImage(index);\n      setIssuesViewerIsOpen(true);\n    }, []);\n  \n    const closeIssuesLightbox = () => {\n      setCurrentIssuesImage(0);\n      setIssuesViewerIsOpen(false);\n    };\n\n  return (\n    <Col>\n      <div className=\"card shadow mb-4\">\n        <div className=\"card-header py-3\">\n          <h6 className=\"m-0 font-weight-bold text-primary\">\n          {translate(\"report_gallery_issues_label\", userInterfaceText)}\n          </h6>\n        </div>\n        <div className=\"card-body\">\n          <Gallery photos={issuePhotos} onClick={openIssuesLightbox} />\n          <hr />\n          <ImagePagination\n            requestNextImages={requestNextImages}\n            photosCount={issuePhotosCount}\n            whichPage={\"issues\"}\n          />\n          <ModalGateway>\n            {viewerIssuesIsOpen ? (\n              <ModalCarousel onClose={closeIssuesLightbox}>\n                <Carousel\n                  currentIndex={currentIssuesImage}\n                  views={issuePhotos.map((x) => ({\n                    ...x,\n                    srcset: \"hello\", //x.srcSet,\n                    caption: x.text, //x.title,\n                  }))}\n                />\n              </ModalCarousel>\n            ) : null}\n          </ModalGateway>\n        </div>\n      </div>\n    </Col>\n  );\n}\n\nexport default IssuePhotos;","import React, { useState, useEffect, useContext } from \"react\";\nimport { Col, Row, Spinner, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport SelectionPanel from \"./selection_panel\";\nimport ProjectIssueGraph from \"./project_issue_graph\";\nimport MultiChoiceGraph from \"../multi_choice_graph\";\nimport ResponsePhotos from \"../gallery/response_photos\";\nimport IssuePhotos from \"../gallery/issue_photos\";\nimport IssueModal from \"./issue_modal\";\nimport { Waypoint } from \"react-waypoint\";\nimport translate from \"../../helpers/translate\";\nimport { AppContext } from \"../../context\";\n\nlet host;\nhost = \"https://field-backend.truefootprint.com\";\n//host = \"https://staging-field-backend.truefootprint.com\"\n//host = \"http://localhost:3000\";\n\nfunction ChartListing({ handleGenerateReport, data, spinner, rerender, showResponsePhotos, setShowResponsePhotos, showIssuePhotos, setShowIssuePhotos }) {\n  const [select_id, setSelectedId] = useState(0);\n\n  const handleClose = () => setSelectedId(0);\n  const handleShow = (id) => setSelectedId(id);\n\n  const [test, setTest] = useState(false);\n  const [showWayPoint, setShowWayPoint] = useState(false);\n  const [loadingImages, setLoadingImages] = useState(false);\n\n  const [photos, setPhotos] = useState([]);\n  const [photosCount, setPhotosCount] = useState(0);\n  const [issuePhotos, setIssuePhotos] = useState([]);\n  const [issuePhotosCount, setIssuePhotosCount] = useState([]);\n  const [programmes, setProgrammes] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const { userInterfaceText, setUserInterfaceText } = useContext(AppContext);\n\n  const [selectedValues, setSelectedValues] = useState({\n    project_id: \"\",\n    programme_id: \"\",\n    startDate: new Date(),\n    endDate: new Date(),\n  });\n  \n  const generateReport = () => {\n    setPhotos([]);\n    setPhotosCount(0);\n    setIssuePhotos([]);\n    setIssuePhotosCount([]);\n    handleGenerateReport();\n  }\n\n  useEffect(() => {\n    axios\n      .get(`${host}/reports/setup_report_form`, {\n        headers: {\n          Authorization: `Basic ${localStorage.getItem(\"token\")}`,\n          \"Accept-Language\": `${localStorage.getItem(\"locale\")}`,\n        },\n      })\n      .then((res) => {        \n        setProgrammes(\n          res.data.programmes.sort((a, b) => a.name.localeCompare(b.name))\n        );\n        setUserInterfaceText(res.data.user_interface_text);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    document.getElementById(\"start-date-select\").value = \"2020-06-01\";\n    document.getElementById(\"end-date-select\").value = new Date()\n      .toISOString()\n      .slice(0, 10);\n  }, [rerender]); // END OF USE EFFECT FOR INTIAL LOAD\n\n  function selectProjectHandler(event) {\n    console.log(\"Set project id\");\n    console.log(event.target.value);\n    setSelectedValues({ ...selectedValues, project_id: event.target.value });\n  }\n\n  function selectProgrammeHandler(event) {\n    setSelectedValues({ ...selectedValues, programme_id: event.target.value });\n    // get all projects for this programme selected\n    axios\n      .get(`${host}/reports/get_projects_list/${event.target.value}`, {\n        headers: {\n          Authorization: `Basic ${localStorage.getItem(\"token\")}`,\n          \"Accept-Language\": `${localStorage.getItem(\"locale\")}`,\n        },\n      })\n      .then((res) => {\n        setProjects(\n          res.data.projects.sort((a, b) => a.name.localeCompare(b.name))\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function requestIntialImages(offset, limit, whichPage) {\n    console.log(\"-----requestINTIALIMAGES-----\");\n    setLoadingImages(true);\n    let request = {\n      project_id: document.getElementById(\"project-select\").value,\n      programme_id: document.getElementById(\"programme-select\").value,\n      startDate: document.getElementById(\"start-date-select\").value,\n      endDate: document.getElementById(\"end-date-select\").value,\n      offset: offset,\n      limit: limit,\n      whichPage: whichPage,\n    };\n    axios\n      .get(`${host}/reports/photos`, {\n        headers: {\n          Authorization: `Basic ${localStorage.getItem(\"token\")}`,\n          \"Accept-Language\": `${localStorage.getItem(\"locale\")}`,\n        },\n        params: request,\n      })\n      .then((res) => {\n        setLoadingImages(false);\n        if (whichPage == \"responses\" && res.data.photos_count != 0) {\n          setShowResponsePhotos(true);\n          setPhotosCount(res.data.photos_count);\n          setPhotos(res.data.photos);\n        } else if (whichPage == \"issues\" && res.data.issue_photos_count != 0){\n          setShowIssuePhotos(true);\n          setIssuePhotosCount(res.data.issue_photos_count);\n          setIssuePhotos(res.data.issue_photos);\n        }        \n      });\n  }\n\n  function requestNextImages(offset, limit, whichPage) {\n    console.log(\"-----requestNextImages-----\");\n    let request = {\n      project_id: document.getElementById(\"project-select\").value,\n      programme_id: document.getElementById(\"programme-select\").value,\n      startDate: document.getElementById(\"start-date-select\").value,\n      endDate: document.getElementById(\"end-date-select\").value,\n      offset: offset,\n      limit: limit,\n      whichPage: whichPage,\n    };\n    axios\n      .get(`${host}/reports/photos`, {\n        headers: {\n          Authorization: `Basic ${localStorage.getItem(\"token\")}`,\n          \"Accept-Language\": `${localStorage.getItem(\"locale\")}`,\n        },\n        params: request,\n      })\n      .then((res) => {\n        console.log(\"WHATS IN MY RES?\");\n        console.log(res);\n        console.log(whichPage);\n        if (whichPage == \"responses\") {\n          setPhotos(res.data.photos);\n        } else {\n          setIssuePhotos(res.data.issue_photos);\n        }\n      });\n  }\n\n  const options = {\n    scales: { xAxes: [{ ticks: { beginAtZero: true, precision: 0 } }] },\n  };\n\n  return (\n    <div>\n      <SelectionPanel\n        programmes={programmes}\n        projects={projects}\n        selectProgrammeHandler={selectProgrammeHandler}\n        selectProjectHandler={selectProjectHandler}\n        handleGenerateReport={generateReport}\n      />\n      <Row>\n        <Col>\n          <h3>\n            {data && data.activity\n              ? `${translate(\"report_programme_name_label\", userInterfaceText)}: ${data.programme_name}, ${translate(\"report_project_name_label\", userInterfaceText)}: ${data.project_name}`\n              : \"\"}\n          </h3>\n        </Col>\n      </Row>\n      <br />\n      {spinner && (\n        <Row>\n          <br />\n          <br />\n          <Col md={{ span: 3, offset: 5 }}>\n            <Spinner animation=\"border\" variant=\"primary\" />\n            &nbsp;\n          </Col>\n        </Row>\n      )}\n      {data && data.activity && (\n        <div>\n          <ProjectIssueGraph\n            renderIf={data && data.project_issues}\n            handleShow={handleShow}\n            data={data}\n            options={options}\n          />\n          {data.activity\n            .sort((a, b) => (a.activity_order > b.activity_order ? 1 : -1))\n            .map((project_activity, index) => {\n              return (\n                <MultiChoiceGraph\n                  key={project_activity.project_activity_name}\n                  project_activity={project_activity}\n                />\n              );\n            })}\n          {loadingImages && (\n            <Row>\n              <br />\n              <br />\n              <Col md={{ span: 3, offset: 5 }}>\n                <Spinner animation=\"border\" variant=\"primary\" />\n                &nbsp;\n              </Col>\n            </Row>\n          )}\n          <Container fluid>\n            <Row>\n              {showResponsePhotos && data && photos && (\n                <ResponsePhotos\n                  photos={photos}\n                  photosCount={photosCount}\n                  requestNextImages={requestNextImages}\n                />\n              )}\n              {showIssuePhotos && data && issuePhotos && (\n                <IssuePhotos\n                  issuePhotos={issuePhotos}\n                  issuePhotosCount={issuePhotosCount}\n                  requestNextImages={requestNextImages}\n                />\n              )}\n            </Row>\n          </Container>\n        </div>\n      )}\n      {data && data.project_issues && (\n        <IssueModal\n          select_id={select_id}\n          handleClose={handleClose}\n          data={data}\n        />\n      )}\n      {data && data.activity && (\n        <Waypoint\n          scrollableAncestor={window}\n          topOffset={\"96%\"}\n          onEnter={function (props) {\n            console.log(\"NEW DEPLOYMENT\");\n            // Fetch images\n            if (!showIssuePhotos && (issuePhotos.length === 0) ) { \n              requestIntialImages(0, 10, \"issues\");\n            }\n\n            if (!showResponsePhotos && (photos.length === 0) ) { \n              requestIntialImages(0, 10, \"responses\");\n            }\n\n            \n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ChartListing;\n","import React, { useContext } from \"react\";\nimport translate from \"../../helpers/translate\";\nimport { AppContext } from \"../../context\";\nimport {\n  Col,\n  Row,\n  Spinner,\n  Container,\n  Form,\n  FormControl,\n  Modal,\n  Button,\n  Table,\n} from \"react-bootstrap\";\n\nconst IssueModal = ({select_id, handleClose, data}) => {\n  const { userInterfaceText, setUserInterfaceText } = useContext(AppContext);\n\n  return (\n    <Modal\n      dialogClassName=\"modal-90w\"\n      show={\"1\" === select_id}\n      onHide={handleClose}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{translate(\"report_issue_modal_project_issues_label\", userInterfaceText)}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Table striped bordered hover responsive variant=\"dark\">\n          <thead>\n            <tr>\n              <th colspan=\"3\">{translate(\"report_issue_modal_question_label\", userInterfaceText)}</th>\n              <th colspan=\"1\">{translate(\"report_issue_modal_issue_id_label\", userInterfaceText)}</th>\n              <th colspan=\"4\">{translate(\"report_issue_modal_resolved_label\", userInterfaceText)}</th>\n              <th colspan=\"3\">{translate(\"report_response_modal_user_id_label\", userInterfaceText)}</th>\n              <th colspan=\"3\">{translate(\"report_issue_modal_note_label\", userInterfaceText)}</th>\n              <th colspan=\"3\">{translate(\"report_response_modal_date_label\", userInterfaceText)}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.project_issues.actual_issues.map((issue) => (\n              <tr>\n                <td colspan=\"3\">{issue.project_question_text}</td>\n                <td colspan=\"1\">{issue.issue_id}</td>\n                <td colspan=\"4\">\n                  {issue.resolved ? translate(\"report_issue_modal_resolved_label\", userInterfaceText) : translate(\"report_issue_modal_not_resolved_label\", userInterfaceText)}\n                </td>\n                <td colspan=\"3\">{issue.user_id}</td>\n                <td colspan=\"3\">{issue.note}</td>\n                <td colspan=\"3\">{issue.date}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default IssueModal;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport translate from \"../../helpers/translate\";\nimport { AppContext } from \"../../context\";\n\nfunction TopNavBar({ handleLogout, setLocale }) {\n  const { userInterfaceText, setUserInterfaceText } = useContext(AppContext);\n  \n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n      <button\n        id=\"sidebarToggleTop\"\n        className=\"btn btn-link d-md-none rounded-circle mr-3\"\n      >\n        <i className=\"fa fa-bars\" />\n      </button>\n      <h3>{translate(\"report_field_app_reports_label\", userInterfaceText)}</h3>\n\n      <ul className=\"navbar-nav ml-auto\">\n        {/* \n        <!-- Nav Item - Alerts --> */}\n        {/* <li className=\"nav-item dropdown no-arrow\"> */}\n        <select onChange={(e) => setLocale(e.target.value)} style={{marginTop: \"14px\", marginBottom: \"14px\"}} className=\"form-select\" aria-label=\"Default select example\">\n          <option value=\"en\" selected=\"selected\">English</option>\n          <option value=\"fr\">Français</option>\n          </select>\n        {/* </li> */}\n        <div className=\"topbar-divider d-none d-sm-block\" />\n        <li className=\"nav-item dropdown no-arrow\">\n          <a\n            className=\"nav-link dropdown-toggle\"\n            href=\"#\"\n            id=\"userDropdown\"\n            role=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            <button\n              onClick={handleLogout}\n              className=\"btn btn-primary btn-user btn-block\"\n            >\n              {translate(\"report_logout_label\", userInterfaceText)}\n            </button>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default TopNavBar;\n","import { useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport { AppContext } from \"../../context\";\nimport translate from \"../../helpers/translate\";\nimport ChartListing from \"../chart_listing\";\nimport TopNavBar from \"./top_nav_bar\";\nimport * as Rbs from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../sb-admin-2.css\";\nimport logo from \"../../TF-White.svg\";\nimport axios from \"axios\";\nimport { propTypes } from \"react-bootstrap/esm/Image\";\nimport {\n  Col,\n  Row,\n  Spinner,\n  Container,\n  Form,\n  FormControl,\n  Modal,\n  Button,\n  Table,\n} from \"react-bootstrap\";\n\nlet host;\nhost = \"https://field-backend.truefootprint.com\";\n//host = \"https://staging-field-backend.truefootprint.com\";\n//host = \"http://localhost:3000\";\n\nfunction Dashboard(props) {\n  const [data, setData] = useState({});\n  const [spinner, setSpinner] = useState(false);\n  const [rerender, setRender] = useState(\"\");\n  const [showResponsePhotos, setShowResponsePhotos] = useState(false);\n  const [showIssuePhotos, setShowIssuePhotos] = useState(false);\n  \n  const { userInterfaceText, setUserInterfaceText } = useContext(AppContext);\n\n  function handleGenerateReport() {\n    setShowResponsePhotos(false);\n    setShowIssuePhotos(false);\n    setSpinner(true);\n    setData({});\n    let request = {\n      project_id: document.getElementById(\"project-select\").value,\n      programme_id: document.getElementById(\"programme-select\").value,\n      startDate: document.getElementById(\"start-date-select\").value,\n      endDate: document.getElementById(\"end-date-select\").value,\n    };\n    axios\n      .get(`${host}/reports/99`, {\n        headers: {\n          Authorization: `Basic ${localStorage.getItem(\"token\")}`,\n          \"Accept-Language\": `${localStorage.getItem(\"locale\")}`,\n        },\n        params: request,\n      })\n      .then((res) => {\n        setSpinner(false);\n        setData(res.data);\n        setUserInterfaceText(res.data.user_interface_text);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n\n\n  function setLocale(locale) {\n    //localStorage.removeItem(\"locale\");\n    localStorage.setItem(\"locale\", locale);\n    console.log(\"DATA?\");\n    console.log(data);\n    setRender(locale);\n    if (Object.keys(data).length) {\n      handleGenerateReport();\n    }    \n  }\n\n  let history = useHistory();\n  function handleLogout(event) {\n    localStorage.setItem(\"locale\", \"en\");\n    localStorage.removeItem(\"token\");\n    props.setLogin(false);\n    history.push(\"/\");\n  }\n\n  return (\n    <div id=\"wrapper\">\n      <ul\n        className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\"\n        id=\"accordionSidebar\"\n      >\n        <div className=\"sidebar-brand-icon\">\n          <img src={logo} alt=\"Logo\" />\n        </div>\n        <div className=\"sidebar-brand-text mx-3\"></div>\n\n        {/* <hr className=\"sidebar-divider my-0\" /> */}\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"#\">\n            <h5 style={{ paddingLeft: \"25px\" }}>{translate(\"report_report_viewer_label\", userInterfaceText)}</h5>\n            <small style={{ paddingLeft: \"75px\" }}>(Beta)</small>\n          </a>\n        </li>\n        <hr className=\"sidebar-divider\" />\n        <hr className=\"sidebar-divider d-none d-md-block\" />\n        <div className=\"text-center d-none d-md-inline\">\n          <button className=\"rounded-circle border-0\" id=\"sidebarToggle\" />\n        </div>\n      </ul>\n      <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n        <div id=\"content\">\n          <TopNavBar handleLogout={handleLogout} setLocale={setLocale} />\n          <div className=\"container-fluid\">\n            <ChartListing\n              showResponsePhotos={showResponsePhotos}\n              setShowResponsePhotos={setShowResponsePhotos}\n              showIssuePhotos={showIssuePhotos}\n              setShowIssuePhotos={setShowIssuePhotos}\n              rerender={rerender}\n              spinner={spinner}\n              setData={setData}\n              data={data}\n              handleGenerateReport={handleGenerateReport}\n            />\n          </div>\n        </div>\n        <footer className=\"sticky-footer bg-white\">\n          <div className=\"container my-auto\">\n            <div className=\"copyright text-center my-auto\">\n              <span>Copyright © TrueFootprint 2021</span>\n            </div>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, login, ...rest }) => {\n  return (\n    <Route {...rest} render={\n      props => {\n        if (login) {\n          return <Component {...rest} {...props} />\n        } else {\n          return <Redirect to={\n            {\n              pathname: '/'//,\n            //   state: {\n            //     from: props.location\n            //   }\n            }\n          } />\n        }\n      }\n    } />\n  )\n}\n\nexport default ProtectedRoute;","import React, { useState, useEffect, useCallback } from \"react\";\nimport './App.css';\nimport {Route, BrowserRouter as Router} from \"react-router-dom\";\nimport logo from './logo.svg';\nimport Login from \"./components/login\"\nimport * as Rbs from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sb-admin-2.css';\nimport Dashboard from './components/dashboard';\nimport ProtectedRoute from './components/login/protected_route';\nimport { AppContext } from './context';\n\nfunction App() {\n  const [login, setLogin] = useState(false);\n  const [ userInterfaceText, setUserInterfaceText ] = useState([]);\n\n  //localStorage.removeItem(\"token\");\n  //localStorage.setItem(\"locale\", \"en\");\n  return (\n    <AppContext.Provider value={{ userInterfaceText, setUserInterfaceText }}>\n      <Router>\n        <Route path=\"/\" exact render={(props) =>  <Login {...props} setLogin={setLogin} />}/>\n        <ProtectedRoute exact path='/dashboard' setLogin={setLogin} login={login} component={Dashboard} />      \n      </Router>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}